// Generated by CoffeeScript 1.12.7
(function() {
  var $inputbox, $message, $window, Cmd, addimg, addmsg, addsys, colors, disable, filereader, manual, newnotice, socket;

  socket = io();

  colors = ["#e21400", "#91580f", "#f8a700", "#f78b00", "#58dc00", "#287b00", "#a8f07a", "#4ae8c4", "#3b88eb", "#3824aa", "#a700ff", "#d300e7"];

  $window = $(window);

  $message = $(".message");

  $inputbox = $(".inputbox");

  disable = {
    time: false,
    notice: true
  };

  manual = {};

  filereader = function(callback, fr, $file) {
    if (fr == null) {
      fr = null;
    }
    if ($file == null) {
      $file = null;
    }
    fr = new FileReader();
    $file = $("<input></input>").attr("type", "file").css("display", "none").appendTo($("body")).change(function() {
      if (this.files.length) {
        return fr.readAsDataURL(this.files[0]);
      }
    });
    $file.click();
    return fr.onload = function(data) {
      callback(data.target.result);
      return $file.remove();
    };
  };

  newnotice = function(title, body) {
    if (disable.notice) {
      return new Notification(title, {
        body: body,
        noscreen: true
      });
    }
  };

  addmsg = function(username, msg, time, ishist) {
    $("<div></div>").addClass("msg").append($("<span></span>").addClass("username").text((ishist ? "(leave)" : "") + " " + username).css("color", colors[parseInt($.md5(username), 16) % colors.length])).append($("<span></span>").addClass("time").text(time).css("display", disable.time ? "none" : "")).append($("<span></span>").addClass("say").text(msg)).hide().fadeIn("normal", function() {
      return $message[0].scrollTop = $message[0].scrollHeight;
    }).appendTo($message);
    return newnotice("通知", "新消息");
  };

  addsys = function(msg, time) {
    $("<div></div>").append($("<span></span>").addClass("time").text(time).css("display", disable.time ? "none" : "")).addClass("sys").append($("<span></span>").text(msg)).hide().fadeIn("normal", function() {
      return $message[0].scrollTop = $message[0].scrollHeight;
    }).appendTo($message);
    return newnotice("通知", "新系统消息");
  };

  addimg = function(username, msg, time, ishist) {
    $("<div></div>").append($("<span></span>").addClass("username").text((ishist ? "(leave)" : "") + " " + username).css("color", colors[parseInt($.md5(username), 16) % colors.length])).append($("<span></span>").addClass("time").text(time).css("display", disable.time ? "none" : "")).append($("<img></img>").addClass("img").attr("src", msg)).hide().fadeIn("normal", function() {
      return $message[0].scrollTop = $message[0].scrollHeight;
    }).appendTo($message);
    return newnotice("通知", "新图片");
  };

  socket.on("sys", function(data) {
    return addsys(data.data, data.time);
  });

  socket.on("new message", function(data) {
    return addmsg(data.username, data.data, data.time, data.ishist);
  });

  socket.on("new image", function(data) {
    return addimg(data.username, data.data, data.time, data.ishist);
  });

  socket.on("disconnect", function(data) {
    $("body").empty();
    return socket = null;
  });

  Cmd = (function() {
    function Cmd() {}

    Cmd.cache = {};

    Cmd.info = {};

    Cmd.nodefault = {};

    Cmd.set = function(key, info, val) {
      this.info[key] = info;
      return this.cache[key] = val;
    };

    Cmd.feed = function(str) {
      var key, ref, val;
      ref = this.cache;
      for (key in ref) {
        val = ref[key];
        if ((str.slice(0, +(key.length - 1) + 1 || 9e9) === key && str[key.length] === " ") || (str === key)) {
          val(str.slice(key.length + 1));
          return true;
        }
      }
      return false;
    };

    Cmd.nodef = function(str) {
      var key, ref, val;
      ref = this.cache;
      for (key in ref) {
        val = ref[key];
        if ((str.slice(0, +(key.length - 1) + 1 || 9e9) === key && str[key.length] === " ") && this.nodefault[key]) {
          return true;
        } else if ((str === key) && this.nodefault[key]) {
          return true;
        }
      }
      return false;
    };

    return Cmd;

  })();

  $window.keydown(function(ent) {
    var str;
    $inputbox.focus();
    if (ent.which === 13) {
      str = $inputbox.val();
      if (str[0] === "/") {
        if (Cmd.feed(str)) {
          if (!Cmd.nodef(str)) {
            $inputbox.val("");
            return $inputbox.blur();
          }
        } else {
          return addsys("command not found: " + str, "");
        }
      } else {
        socket.emit("message", {
          type: "text",
          data: str,
          ishist: false
        });
        $inputbox.val("");
        return $inputbox.blur();
      }
    }
  });

  Cmd.set("/img", "如果需要发送图片, 使用: /img", function() {
    return filereader(function(data) {
      return socket.emit("message", {
        type: "image",
        data: data,
        ishist: false
      });
    });
  });

  Cmd.set("/login", "如果需要登录, 使用: /login 用户名 密码", function(data) {
    var password, ref, roomname, roompassword, username;
    ref = data.split(" "), username = ref[0], password = ref[1], roomname = ref[2], roompassword = ref[3];
    socket.emit("login", {
      username: username,
      password: password
    });
    if (roomname) {
      return socket.emit("join", {
        roomname: roomname,
        roompassword: roompassword
      });
    }
  });

  Cmd.set("/join", "如果需要加入房间, 使用: /join 房间名 房间密码", function(data) {
    var ref, roomname, roompassword;
    ref = data.split(" "), roomname = ref[0], roompassword = ref[1];
    return socket.emit("join", {
      roomname: roomname,
      roompassword: roompassword
    });
  });

  Cmd.set("/logout", "如果需要登出, 使用: /logout", function() {
    return socket.emit("logout");
  });

  Cmd.set("/eraseHist", "如果需要清空留言, 使用: /eraseHist", function() {
    return socket.emit("eraseHist");
  });

  Cmd.set("/leave", "如果需要离开房间, 使用: /leave", function() {
    $message.empty();
    return socket.emit("leave");
  });

  Cmd.set("/lvmsg", "如果需要留言, 使用: /lvmsg 文字", function(data) {
    return socket.emit("message", {
      type: "text",
      data: data,
      ishist: true
    });
  });

  Cmd.set("/lvimg", "如果需要留图, 使用: /lvimg", function() {
    return filereader(function(data) {
      return socket.emit("message", {
        type: "image",
        data: data,
        ishist: true
      });
    });
  });

  Cmd.set("/help", "如果需要查看命令, 使用: /help", function(data) {
    if (Cmd.info[data]) {
      return addsys(Cmd.info[data], "");
    } else {
      return addsys("command not found: /help " + data, "");
    }
  });

  Cmd.set("/manual", "如果需要查看命令列表, 使用: /manual", function() {
    var key, ref, results, val;
    ref = Cmd.info;
    results = [];
    for (key in ref) {
      val = ref[key];
      results.push(addsys(val, ""));
    }
    return results;
  });

  Cmd.set("/info", "如果需要获取信息, 使用: /info [curuser | me | room | leftmsg]", function(data) {
    return socket.emit("info", {
      data: data
    });
  });

  Cmd.set("/clear", "如果需要清空消息, 使用: /clear [sys | all]", function(data) {
    switch (data) {
      case "sys":
        return $(".message>*").filter(".sys").fadeOut("normal", function() {
          return $(this).remove();
        });
      case "all":
        return $(".message>*").fadeOut("normal", function() {
          return $(this).remove();
        });
      default:
        return addsys("command not found: /clear " + data, "");
    }
  });

  Cmd.set("/switch", "如果需要修改开关, 使用: /switch [disable | enable] [time | notice]", function(data) {
    var obj, ref, type;
    ref = data.split(" "), type = ref[0], obj = ref[1];
    if (obj === "time") {
      if (type === "disable") {
        disable.time = true;
        return $(".time").fadeOut();
      } else if (type === "enable") {
        disable.time = false;
        return $(".time").fadeIn();
      } else {
        return addsys("command not found: /switch " + data, "");
      }
    } else if (obj === "notice") {
      if (type === "disable") {
        return disable.notice = true;
      } else if (type === "enable") {
        return disable.notice = false;
      } else {
        return addsys("command not found: /switch " + data, "");
      }
    } else {
      return addsys("command not found: /switch " + data, "");
    }
  });

  Cmd.set("/emoji", "如果需要添加表情, 使用: /emoji 表情名拼音{xiaoku: 😂 | lenghan: 😓 | shuijiao: 😪 | ku: 😢 | gaoxing: 😊}", function(data) {
    var dt;
    Cmd.nodefault["/emoji"] = true;
    dt = {
      xiaoku: "😂",
      lenghan: "😓",
      shuijiao: "😪",
      ku: "😢",
      gaoxing: "😊"
    };
    if (dt[data]) {
      return $inputbox.val(dt[data]);
    } else {
      return addsys("command not found: /emoji " + data, "");
    }
  });

  Notification.requestPermission();

}).call(this);

//# sourceMappingURL=main.js.map
